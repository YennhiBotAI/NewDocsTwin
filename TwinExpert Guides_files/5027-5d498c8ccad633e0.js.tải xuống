"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5027],{12312:(e,t,a)=>{a.d(t,{A:()=>n,U:()=>r});var s=a(95331);function r(){return(0,s.createBrowserClient)("https://ilpedwsxgjdvxbdwdtzd.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlscGVkd3N4Z2pkdnhiZHdkdHpkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM5NTIxMzEsImV4cCI6MjA1OTUyODEzMX0.luvbUYR-hG1D-BFKwEjKMjB3E6uZJAmLd4wXM3lxZic")}let n=r()},25027:(e,t,a)=>{a.d(t,{KU:()=>c,m7:()=>o});var s=a(12312),r=a(83551),n=a(32024),o=function(e){return e.READ_ONLY="read_only",e.FULL_ACCESS="full_access",e}({});class i{getBaseUrl(){return this.baseUrl}async getCurrentToken(){try{let e=null;if(!(e=(0,r.qQ)()))try{let{data:{session:t}}=await s.A.auth.getSession();e=t}catch(e){return console.error("❌ Error getting session from Supabase:",e),null}if(e&&e.expires_at){let t=Math.floor(Date.now()/1e3);if(e.expires_at-t<=300)try{console.log("\uD83D\uDD04 Token expires soon, attempting refresh...");let t=await (0,r.uI)();t&&(e=t,console.log("✅ Token refreshed successfully"))}catch(e){console.warn("⚠️ Failed to refresh token:",e)}}return(null==e?void 0:e.access_token)||null}catch(e){return console.error("❌ Error getting current token:",e),null}}async getCurrentUser(){return this.request("GET","/auth/me")}async firstSignup(){return this.request("POST","/auth/first-signup")}async getProfile(){return this.request("GET","/auth/me")}async updateProfile(e){return this.request("PUT","/auth/profile",e)}async createTwin(e){return this.request("POST","/twins",e)}async uploadAvatar(e,t){let a=new FormData;a.append("file",e);let s=new URLSearchParams;(null==t?void 0:t.width)&&s.append("width",t.width.toString()),(null==t?void 0:t.height)&&s.append("height",t.height.toString()),(null==t?void 0:t.quality)&&s.append("quality",t.quality.toString()),(null==t?void 0:t.format)&&s.append("format",t.format);let r=s.toString();return this.request("POST",r?"/upload/avatar?".concat(r):"/upload/avatar",a)}async uploadCoverPhoto(e,t){let a=new FormData;a.append("file",e);let s=new URLSearchParams;(null==t?void 0:t.width)&&s.append("width",t.width.toString()),(null==t?void 0:t.height)&&s.append("height",t.height.toString()),(null==t?void 0:t.quality)&&s.append("quality",t.quality.toString()),(null==t?void 0:t.format)&&s.append("format",t.format);let r=s.toString();return this.request("POST",r?"/upload/cover-photo?".concat(r):"/upload/cover-photo",a)}async getTwins(){return this.request("GET","/twins")}async getTwin(e){return this.request("GET","/twins/".concat(e))}async updateTwin(e,t){return this.request("PATCH","/twins/".concat(e),t)}async deleteTwin(e){return this.request("DELETE","/twins/".concat(e))}async publishTwin(e){return this.request("PATCH","/twins/".concat(e,"/publish"))}async unpublishTwin(e){return this.request("PATCH","/twins/".concat(e,"/cancel-to-training"))}async createConversation(e){return this.request("POST","/conversations",e)}async getConversations(){return this.request("GET","/conversations")}async getMessages(e){return this.request("GET","/conversations/".concat(e,"/messages"))}async sendMessage(e,t){return this.request("POST","/conversations/".concat(e,"/messages"),t)}async switchTwin(e,t){return this.request("PUT","/conversations/".concat(e,"/twin"),{twinId:t})}async getTwinUsageHistory(e){return this.request("GET","/conversations/".concat(e,"/twin-history"))}async deleteConversation(e){return this.request("DELETE","/conversations/".concat(e))}async updateConversation(e,t){return this.request("PATCH","/conversations/".concat(e),t)}async uploadDocument(e,t){let a=new FormData;return a.append("file",t),this.request("POST","/twins/".concat(e,"/documents"),a)}async createRichTextKnowledge(e,t){return this.request("POST","/twins/".concat(e,"/documents/richtext"),t)}async updateRichTextKnowledge(e,t,a){return this.request("PUT","/twins/".concat(e,"/documents/richtext/").concat(t),a)}async getDocuments(e,t){return this.request("GET","/twins/".concat(e,"/documents").concat(t?"?type=".concat(t):""))}async deleteDocument(e,t){return this.request("DELETE","/twins/".concat(e,"/documents/").concat(t))}async getSupportedModels(){return this.request("GET","/app/supported-models")}connectWebSocket(e,t){this.ws=new WebSocket("wss://api.aionxpert.com/v1/chat"),this.ws.onmessage=t=>{e(JSON.parse(t.data))},this.ws.onerror=e=>{t(e)}}disconnectWebSocket(){this.ws&&(this.ws.close(),this.ws=null)}getTeamContext(){try{let t=localStorage.getItem("team-store");if(t){var e;let a=JSON.parse(t);return(null===(e=a.state)||void 0===e?void 0:e.activeTeamId)||null}}catch(e){console.warn("Failed to get team context from localStorage:",e)}return null}clearTeamContext(){try{localStorage.removeItem("team-store"),console.log("\uD83E\uDDF9 Cleared invalid team context")}catch(e){console.warn("Failed to clear team context:",e)}}async request(e,t,a){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};try{let o=await this.getCurrentToken(),i=this.getTeamContext(),c={...s};o&&(c.Authorization="Bearer ".concat(o)),i&&!s["X-Team-Id"]&&(c["X-Team-Id"]=i),s["Content-Type"]||a instanceof FormData||(c["Content-Type"]="application/json");let u={method:e,headers:c};a&&(a instanceof FormData?(u.body=a,delete c["Content-Type"]):u.body=JSON.stringify(a));let l=await fetch("".concat(this.baseUrl).concat(t),u);if(401===l.status&&o){console.warn("\uD83D\uDD12 Received 401 Unauthorized, attempting token refresh...");try{let e=await (0,r.uI)();if(null==e?void 0:e.access_token){console.log("✅ Token refreshed successfully, retrying request..."),c.Authorization="Bearer ".concat(e.access_token);let a=await fetch("".concat(this.baseUrl).concat(t),{...u,headers:c});if(a.ok){if(204===a.status)return;return a.json().catch(()=>null)}if(401===a.status)throw Error("Token refresh failed, authentication required");{let e=await a.json();throw Error(e.message)}}throw Error("No valid token after refresh")}catch(e){throw console.error("❌ Token refresh failed:",e),await (0,r.$t)(),(0,n.jL)(),Error("Authentication failed. Please log in again.")}}if(!l.ok){let e=await l.json();throw 403===l.status&&i&&(console.warn("\uD83D\uDEAB Received 403 Forbidden with team context, clearing team context..."),this.clearTeamContext()),Error(e.message)}if(204===l.status)return;return l.json().catch(()=>null)}catch(e){throw console.error("API request failed:",e),e}}async getAvailableTwins(){return this.request("GET","/twins/available")}async getTwinRequestUser(){return await this.request("GET","/twin-requests/my-requested-twins")}async getTwinRequests(){return await this.request("GET","/twin-requests")}async createTwinRequest(e){return await this.request("POST","/twin-requests",e)}async processTwinRequest(e,t){return await this.request("POST","/twin-requests/".concat(e,"/process"),t)}async cancelTwinRequest(e){return await this.request("DELETE","/twin-requests/".concat(e,"/cancel"))}async getTokenUsageStats(e){let t=new URLSearchParams;e.twinId&&t.append("twinId",e.twinId),e.provider&&t.append("provider",e.provider),e.model&&t.append("model",e.model),e.usageType&&t.append("usageType",e.usageType),e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate),e.limit&&t.append("limit",e.limit.toString()),e.skip&&t.append("skip",e.skip.toString());let a=t.toString();return this.request("GET","/token-usage/stats".concat(a?"?".concat(a):""))}async getUserTokenUsageStats(e){let t=new URLSearchParams;e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate);let a=t.toString();return this.request("GET","/token-usage/stats/user".concat(a?"?".concat(a):""))}async getTwinTokenUsageStats(e,t){let a=new URLSearchParams;a.append("twinId",e),t.startDate&&a.append("startDate",t.startDate),t.endDate&&a.append("endDate",t.endDate);let s=a.toString(),r="/token-usage/stats/twin/".concat(e).concat(s?"?".concat(s):"");return this.request("GET",r)}async getDailyTokenUsageStats(e){let t=new URLSearchParams;e.twinId&&t.append("twinId",e.twinId),e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate);let a=t.toString();return this.request("GET","/token-usage/stats/daily".concat(a?"?".concat(a):""))}async getModelBreakdownStats(e){let t=new URLSearchParams;e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate);let a=t.toString();return this.request("GET","/token-usage/stats/model-breakdown".concat(a?"?".concat(a):""))}async getCostAnalysis(e){let t=new URLSearchParams;e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate),e.groupBy&&t.append("groupBy",e.groupBy);let a=t.toString();return this.request("GET","/token-usage/stats/cost-analysis".concat(a?"?".concat(a):""))}async getUsersTokenUsageStats(e){let t=new URLSearchParams;e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate),e.limit&&t.append("limit",e.limit.toString()),e.sortBy&&t.append("sortBy",e.sortBy),e.sortOrder&&t.append("sortOrder",e.sortOrder);let a=t.toString();return this.request("GET","/token-usage/stats/users".concat(a?"?".concat(a):""))}async getQuotaStatus(e){return this.request("GET","/message-limits/my-quota-status".concat(e?"?conversationId=".concat(e):""))}async getMyUsageStats(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new URLSearchParams;e.teamId&&t.append("teamId",e.teamId),e.projectId&&t.append("projectId",e.projectId),e.month&&t.append("month",e.month);let a=t.toString();return this.request("GET","/analytics/message-usage/my-usage".concat(a?"?".concat(a):""))}async checkMyLimits(e){return this.request("GET","/analytics/message-usage/my-limits".concat(e?"?conversationId=".concat(e):""))}async getCustomerInsights(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new URLSearchParams;e.page&&t.append("page",e.page.toString()),e.limit&&t.append("limit",e.limit.toString()),e.sortBy&&t.append("sortBy",e.sortBy),e.sortOrder&&t.append("sortOrder",e.sortOrder),e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate),e.search&&t.append("search",e.search);let a=t.toString();return this.request("GET","/admin/analytics/customer-insights".concat(a?"?".concat(a):""))}async getCustomerInsightsSummary(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new URLSearchParams;e.startDate&&t.append("startDate",e.startDate),e.endDate&&t.append("endDate",e.endDate);let a=t.toString();return this.request("GET","/admin/analytics/customer-insights/summary".concat(a?"?".concat(a):""))}async getCustomerTrends(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new URLSearchParams;e.period&&t.append("period",e.period),e.groupBy&&t.append("groupBy",e.groupBy);let a=t.toString();return this.request("GET","/users/admin/customer-insights/trends".concat(a?"?".concat(a):""))}async getSystemOverview(e){let t=new URLSearchParams;e&&t.append("month",e);let a=t.toString();return this.request("GET","/analytics/message-usage/admin/overview".concat(a?"?".concat(a):""))}async getAdminUserAnalytics(e,t,a){let s=new URLSearchParams;e&&s.append("month",e),t&&s.append("limit",t.toString()),a&&s.append("sortBy",a);let r=s.toString();return this.request("GET","/analytics/message-usage/admin/users".concat(r?"?".concat(r):""))}async getAdminTeamAnalytics(e,t){let a=new URLSearchParams;e&&a.append("month",e),t&&a.append("limit",t.toString());let s=a.toString();return this.request("GET","/analytics/message-usage/admin/teams".concat(s?"?".concat(s):""))}async getAdminProjectAnalytics(e,t){let a=new URLSearchParams;e&&a.append("month",e),t&&a.append("limit",t.toString());let s=a.toString();return this.request("GET","/analytics/message-usage/admin/projects".concat(s?"?".concat(s):""))}async getPlanUtilizationAnalytics(e){let t=new URLSearchParams;e&&t.append("month",e);let a=t.toString();return this.request("GET","/analytics/message-usage/admin/plan-utilization".concat(a?"?".concat(a):""))}async getAllUsers(){return this.request("GET","/users/admin/all")}async getUsersPaginated(e){let t=new URLSearchParams;return e.page&&t.append("page",e.page.toString()),e.limit&&t.append("limit",e.limit.toString()),e.search&&t.append("search",e.search),e.role&&t.append("role",e.role),e.status&&t.append("status",e.status),e.planType&&t.append("planType",e.planType),e.sortBy&&t.append("sortBy",e.sortBy),e.sortOrder&&t.append("sortOrder",e.sortOrder),this.request("GET","/users/admin/paginated?".concat(t.toString()))}async getUserDetailedProfile(e){return this.request("GET","/users/detailed-profile",{},{"X-User-Id":e})}async deactivateUser(e){return this.request("POST","/users/".concat(e,"/deactivate"))}async activateUser(e){return this.request("POST","/users/".concat(e,"/activate"))}async grantTwinAccess(e,t){return this.request("POST","/users/twin-access",{userId:e,twinId:t})}async revokeTwinAccess(e,t){return this.request("DELETE","/users/twin-access/".concat(e,"/").concat(t))}async getUserTwinAccess(e){return this.request("GET","/users/".concat(e,"/twin-access"))}async setUserMessageLimits(e,t){return this.request("POST","/message-limits/users/".concat(e,"/limits"),t)}async getUserMessageLimits(e){return this.request("GET","/message-limits/users/".concat(e,"/limits"))}async getUserEffectiveLimits(e){return this.request("GET","/message-limits/users/".concat(e,"/limits"))}async getCurrentUserSubscription(){return await this.request("GET","/users/me/subscription")}async upgradeCurrentUserPlan(e){return await this.request("POST","/users/me/subscription/upgrade",{planType:e})}async updateUserSubscription(e,t){return await this.request("PUT","/users/".concat(e,"/subscription"),t)}async getPlanTypes(){return(await this.request("GET","/plan-constants/types")).data}async getPlanLimits(){return(await this.request("GET","/plan-constants/limits")).data}async getSubscriptionStatus(){return(await this.request("GET","/plan-constants/subscription-status")).data}async getPlanOptions(){return(await this.request("GET","/plan-constants/options")).data}async getPlanLimitsByType(e){try{return await this.request("GET","/billing/plan-limits/".concat(e))}catch(e){throw console.error("Error fetching plan limits by type:",e),e}}async getProcessingLimits(){try{return await this.request("GET","/projects/processing-limits")}catch(e){throw console.error("Error fetching processing limits:",e),e}}async getProcessingLimitsByPlan(e){try{return await this.request("GET","/projects/processing-limits/".concat(e))}catch(e){throw console.error("Error fetching processing limits by plan:",e),e}}async getProjectProcessingLimits(e){try{return await this.request("GET","/projects/".concat(e,"/budget/limits"))}catch(e){throw console.error("Error fetching project processing limits:",e),e}}async getTeams(){return await this.request("GET","/teams")}async getTeam(e){return await this.request("GET","/teams/".concat(e))}async createTeam(e){return await this.request("POST","/teams",e)}async createDefaultTeam(e){return await this.request("POST","/teams/default",{userName:e})}async updateTeam(e,t){return await this.request("PUT","/teams/".concat(e),t)}async deleteTeam(e){return await this.request("DELETE","/teams/".concat(e))}async getTeamMembers(e){return await this.request("GET","/teams/".concat(e,"/members"))}async inviteTeamMember(e,t){return await this.request("POST","/teams/".concat(e,"/members"),t)}async updateTeamMember(e,t,a){return await this.request("PUT","/teams/".concat(e,"/members/").concat(t),a)}async removeTeamMember(e,t){return await this.request("DELETE","/teams/".concat(e,"/members/").concat(t))}async getTeamPlanAccess(e){return await this.request("GET","/teams/".concat(e,"/plan-access"))}async checkTwinAccess(e,t){return await this.request("GET","/teams/".concat(e,"/twins/").concat(t,"/access"))}async getSeatPoolUsage(){return await this.request("GET","/teams/seat-pool/usage")}async validateSeatAvailability(e){return await this.request("GET","/teams/seat-pool/validate/".concat(e))}async getProjects(){return await this.request("GET","/projects")}async getProjectsByTeam(e){return await this.request("GET","/projects",void 0,{"X-Team-Id":e})}async getProject(e){return await this.request("GET","/projects/".concat(e))}async createProject(e){return await this.request("POST","/projects",e)}async updateProject(e,t){return await this.request("PUT","/projects/".concat(e),t)}async uploadProjectAvatar(e,t){let a=new FormData;return a.append("file",t),await this.request("POST","/projects/".concat(e,"/avatar"),a)}async getProjectMembers(e){return await this.request("GET","/projects/".concat(e,"/members"))}async getProjectWithMembers(e){return await this.request("GET","/projects/".concat(e,"/with-members"))}async getProjectAccess(e){return await this.request("GET","/projects/".concat(e,"/access"))}async getAvailableTeamMembers(e){return await this.request("GET","/projects/".concat(e,"/available-members"))}async addProjectMembers(e,t){return await this.request("POST","/projects/".concat(e,"/members/bulk"),{userIds:t})}async removeProjectMember(e,t){return await this.request("DELETE","/projects/".concat(e,"/members/").concat(t))}async archiveProject(e){return await this.request("DELETE","/projects/".concat(e,"/archive"))}async unarchiveProject(e){return await this.request("PUT","/projects/".concat(e,"/archive"))}async getArchivedProjects(){return await this.request("GET","/projects/archived")}async deleteProject(e){return await this.request("DELETE","/projects/".concat(e))}async getProjectFiles(e){return await this.request("GET","/projects/".concat(e,"/files"))}async uploadProjectFile(e,t,a){let s=new FormData;s.append("file",t),a&&s.append("description",a);let r=await this.getCurrentToken(),n=await fetch("".concat(this.baseUrl,"/projects/").concat(e,"/files"),{method:"POST",headers:{Authorization:"Bearer ".concat(r)},body:s});if(!n.ok)throw Error((await n.json().catch(()=>({}))).message||"Upload failed: ".concat(n.statusText));return await n.json()}async updateProjectFile(e,t,a){return await this.request("PUT","/projects/".concat(e,"/files/").concat(t),a)}async deleteProjectFile(e,t){return await this.request("DELETE","/projects/".concat(e,"/files/").concat(t))}async deleteProjectFiles(e,t){return await this.request("DELETE","/projects/".concat(e,"/files/bulk"),{fileIds:t})}async getProjectUsage(e){return await this.request("GET","/projects/".concat(e,"/budget/stats"))}async getProcessingStatus(e){return await this.request("GET","/projects/".concat(e,"/processing/status"))}async triggerFileProcessing(e){return await this.request("POST","/projects/".concat(e,"/processing/start"))}async retryFileProcessing(e){return await this.request("POST","/projects/".concat(e,"/processing/retry"))}async getFileAnalysis(e,t){return await this.request("GET","/projects/".concat(e,"/files/").concat(t,"/analysis"))}async getProcessedFiles(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20,s=new URLSearchParams;t&&s.append("documentType",t),s.append("limit",a.toString());let r=s.toString(),n="/projects/".concat(e,"/files/processed").concat(r?"?".concat(r):"");return await this.request("GET",n)}async getApiKeys(){let e=await fetch("".concat(this.baseUrl,"/api/v1/auth/api-keys"),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(await this.getCurrentToken())}});if(!e.ok)throw Error("Failed to fetch API keys: ".concat(e.statusText));return(await e.json()).data}async createApiKey(e){let t=await fetch("".concat(this.baseUrl,"/api/v1/auth/api-keys"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(await this.getCurrentToken())},body:JSON.stringify(e)});if(!t.ok)throw Error("Failed to create API key: ".concat(t.statusText));return(await t.json()).data}async revokeApiKey(e){let t=await fetch("".concat(this.baseUrl,"/api/v1/auth/api-keys/").concat(e),{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(await this.getCurrentToken())}});if(!t.ok)throw Error("Failed to revoke API key: ".concat(t.statusText))}async getApiKeyUsage(e){let t=await fetch("".concat(this.baseUrl,"/api/v1/auth/usage"),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(await this.getCurrentToken())}});if(!t.ok)throw Error("Failed to fetch API key usage: ".concat(t.statusText));return(await t.json()).data}async getApiKeysUsageSummary(){let e=await fetch("".concat(this.baseUrl,"/api/v1/auth/api-keys/usage-summary"),{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(await this.getCurrentToken())}});if(!e.ok)throw Error("Failed to fetch API keys usage summary: ".concat(e.statusText));return(await e.json()).data}async validateApiKey(e){let t=await fetch("".concat(this.baseUrl,"/api/v1/auth/validate"),{method:"GET",headers:{"Content-Type":"application/json","X-API-Key":e}});if(!t.ok)throw Error("Failed to validate API key: ".concat(t.statusText));return(await t.json()).data}constructor(e="https://api.twinexpert.com"){this.ws=null,this.baseUrl=e}}let c=async(e,t)=>{if((null==t?void 0:t.requireAuth)===!1)return console.log("ℹ️ Creating AiXpertClient (auth not required)"),new i;let a=null;if(!(a=(0,r.qQ)()))try{let{data:{session:e}}=await s.A.auth.getSession();a=e}catch(e){console.error("❌ Error getting session from Supabase:",e)}if(!a){if(console.log("No session found, user needs to authenticate"),null==t?void 0:t.skipRedirect)return console.log("ℹ️ Creating AiXpertClient (no session, skip redirect)"),new i;throw(0,n.jL)(e),Error("Redirecting to login...")}if(a&&!a.access_token){console.error("❌ Session exists but no access token found");try{await s.A.auth.signOut()}catch(e){console.error("Error signing out invalid session:",e)}if(null==t?void 0:t.skipRedirect)return console.log("ℹ️ Creating AiXpertClient (invalid session, skip redirect)"),new i;throw(0,n.jL)(),Error("Invalid session, redirecting to login...")}return console.log("✅ Creating AiXpertClient (token will be fetched per request)"),new i}},27071:(e,t,a)=>{a.d(t,{Ke:()=>o,NG:()=>r,g0:()=>n});let s=null;function r(e){try{null!==s&&s!==e&&(console.log("\uD83D\uDC64 User changed from ".concat(s," to ").concat(e,", clearing team context")),localStorage.removeItem("team-store")),s=e}catch(e){console.warn("Failed to check/clear team context on user change:",e)}}function n(){try{localStorage.removeItem("team-store"),s=null,console.log("\uD83E\uDDF9 Team context cleared")}catch(e){console.warn("Failed to clear team context:",e)}}function o(){s=null,console.log("\uD83D\uDD27 Team context manager initialized")}},32024:(e,t,a)=>{function s(e){!function(){{let e=window.location.pathname+window.location.search;"/auth/login"!==e&&"/auth/register"!==e&&localStorage.setItem("redirectAfterLogin",e)}}(),console.log("\uD83D\uDD04 Redirecting to login page..."),e&&"function"==typeof e.push?e.push("/auth/login"):window.location.href="/auth/login"}function r(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"/new",a=function(){{let e=localStorage.getItem("redirectAfterLogin");if(e)return localStorage.removeItem("redirectAfterLogin"),e}return null}()||t;console.log("✅ Login successful, redirecting to: ".concat(a)),setTimeout(()=>{window.location.href=a},500)}a.d(t,{Sk:()=>r,jL:()=>s})},83551:(e,t,a)=>{a.d(t,{$t:()=>d,Bh:()=>u,Ph:()=>c,qQ:()=>l,uI:()=>h});var s=a(12312),r=a(27071);let n=!1,o=null,i=[];function c(){if(n)return;console.log("\uD83D\uDD10 Initializing global auth listener...");let{data:{subscription:e}}=s.A.auth.onAuthStateChange(async(e,t)=>{var a;switch(console.log("\uD83D\uDD10 Auth state changed: ".concat(e),{hasSession:!!t,userId:null==t?void 0:null===(a=t.user)||void 0===a?void 0:a.id,expiresAt:(null==t?void 0:t.expires_at)?new Date(1e3*t.expires_at).toISOString():null}),o=t,e){case"SIGNED_IN":console.log("✅ User signed in successfully");break;case"SIGNED_OUT":console.log("\uD83D\uDC4B User signed out"),(0,r.g0)();break;case"TOKEN_REFRESHED":console.log("\uD83D\uDD04 Token refreshed successfully");break;case"USER_UPDATED":console.log("\uD83D\uDC64 User profile updated");break;case"PASSWORD_RECOVERY":console.log("\uD83D\uDD11 Password recovery initiated");break;default:console.log("\uD83D\uDD10 Auth event: ".concat(e))}i.forEach(a=>{try{a(e,t)}catch(e){console.error("Error in auth state callback:",e)}})});return n=!0,()=>{e.unsubscribe(),n=!1,o=null,i.length=0}}function u(e){return i.push(e),()=>{let t=i.indexOf(e);t>-1&&i.splice(t,1)}}function l(){return o}async function h(){try{console.log("\uD83D\uDD04 Manually refreshing session...");let{data:e,error:t}=await s.A.auth.refreshSession();if(t)throw console.error("❌ Failed to refresh session:",t),t;return console.log("✅ Session refreshed successfully"),e.session}catch(e){throw console.error("❌ Error refreshing session:",e),e}}async function d(){try{console.log("\uD83E\uDDF9 Clearing all credentials..."),await s.A.auth.signOut();{let e=[];for(let t=0;t<localStorage.length;t++){let a=localStorage.key(t);a&&(a.includes("supabase")||a.includes("auth")||a.includes("token")||a.includes("session")||a.includes("team-store"))&&e.push(a)}e.forEach(e=>{localStorage.removeItem(e)});let t=[];for(let e=0;e<sessionStorage.length;e++){let a=sessionStorage.key(e);a&&(a.includes("supabase")||a.includes("auth")||a.includes("token")||a.includes("session"))&&t.push(a)}t.forEach(e=>{sessionStorage.removeItem(e)}),document.cookie.split(";").forEach(e=>{let t=e.indexOf("="),a=t>-1?e.substr(0,t).trim():e.trim();(a.includes("supabase")||a.includes("auth")||a.includes("token"))&&(document.cookie="".concat(a,"=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=").concat(window.location.hostname),document.cookie="".concat(a,"=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/"))})}o=null,console.log("✅ Credentials cleared successfully")}catch(e){console.error("❌ Error clearing credentials:",e)}}}}]);